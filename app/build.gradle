import java.util.regex.Pattern

apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

def versionPropertiesFile = rootProject.file("version.properties")
def versionProperties = new Properties()
versionProperties.load(new FileInputStream(versionPropertiesFile))

android {
    signingConfigs {
        releaseConfig {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias = keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.aspenshore.secretapp"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode buildVersionCode(versionProperties['artifact_version'])
        versionName versionProperties['artifact_version']
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseConfig
        }
    }
    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.core:core-ktx:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test:rules:1.1.1'
    androidTestImplementation ('com.github.dogriffiths.relish:relish-core:0.0.222') {
        exclude module: 'java-hamcrest'
        exclude module: 'hamcrest-core'
    }
    androidTestImplementation ('com.github.dogriffiths.relish:relish-espresso:0.0.222') {
        exclude module: 'java-hamcrest'
        exclude module: 'hamcrest-core'
    }
    implementation 'androidx.room:room-runtime:2.2.0'
    annotationProcessor 'androidx.room:room-compiler:2.2.0'
}

task increaseVersion {
    doLast {
        logger.debug(":increaseVersion - Incrementing Package and Manifest Version...")
        def propsFile = file("../version.properties")
        def propsText = propsFile.getText()

        def patternVersionNumber = Pattern.compile("artifact_version=(\\d+)\\.(\\d+)\\.(\\d+)")
        def matcherVersionNumber = patternVersionNumber.matcher(propsText)
        matcherVersionNumber.find()
        def majorVersion = Integer.parseInt(matcherVersionNumber.group(1))
        def minorVersion = Integer.parseInt(matcherVersionNumber.group(2))
        def buildVersion = Integer.parseInt(matcherVersionNumber.group(3))
        propsText = matcherVersionNumber.replaceAll("artifact_version=" + majorVersion + "."
                + minorVersion + "." + ++buildVersion)
        propsFile.write(propsText)
    }
}